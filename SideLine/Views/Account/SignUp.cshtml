@model SideLine.Models.Views.SignUpViewModel

@{
    Layout = "~/Views/Layout/Layout.cshtml";
}

<h2>@Model.LabelTitolo</h2>
<br />
<br />


@using (Html.BeginForm("SignUp", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelNome </label><br />
                @Html.TextBoxFor(t => t.Utente.Nome, new { placeholder = Model.LabelNome })
                @Html.ValidationMessageFor(t => t.Utente.Nome)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelCognome </label><br />
                @Html.TextBoxFor(t => t.Utente.Cognome, new { placeholder = Model.LabelCognome })
                @Html.ValidationMessageFor(t => t.Utente.Cognome)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelEmail </label><br />
                @Html.TextBoxFor(t => t.Utente.Email, new { placeholder = Model.LabelEmail, type = "email" })
                @Html.ValidationMessageFor(t => t.Utente.Email)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelPassword</label><br />
                @Html.PasswordFor(t => t.Password, new { placeholder = Model.LabelPassword })
                @Html.ValidationMessageFor(t => t.Password)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelConfermaPassword</label><br />
                @Html.PasswordFor(t => t.ConfermaPassword, new { placeholder = Model.LabelConfermaPassword })
                @Html.ValidationMessageFor(t => t.ConfermaPassword)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelSesso </label><br />
                @Html.DropDownListFor(t => t.Utente.Sesso, new List<SelectListItem>
                {new SelectListItem{Text="Maschio", Value="Maschio"},
                 new SelectListItem{Text="Femmina", Value="Femmina"}}, "Seleziona Sesso")
                @Html.ValidationMessageFor(t => t.Utente.Sesso)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <label>@Model.LabelSquadra </label><br />
                @Html.DropDownListFor(t => t.Utente.FK_Societa_Sportiva, new List<SelectListItem>
                {new SelectListItem{Text="AC MILAN", Value="AC MILAN"},
                 new SelectListItem{Text="AEK ATHENS", Value="AEK ATHENS"},
                 new SelectListItem { Text = "AJAX", Value = "AJAX" },
                 new SelectListItem { Text = "ALAVES", Value = "ALAVES" },
                 new SelectListItem{Text="ALFA ROMEO RACING", Value="ALFA ROMEO RACING"},
                 new SelectListItem { Text = "ALPHATAURI", Value = "ALPHATAURI"},
                 new SelectListItem { Text = "ALPINE", Value = "ALPINE" },
                 new SelectListItem { Text = "ANADOLU EFES", Value = "ANADOLU EFES" },
                 new SelectListItem { Text = "APRILIA", Value = "APRILIA" },
                 new SelectListItem { Text = "ANTWERP", Value = "ANTWERP" },
                 new SelectListItem { Text = "ARMINIA BELEFELD", Value = "ARMINIA BELEFELD" },
                 new SelectListItem { Text = "ARSENAL", Value = "ARSENAL" },
                 new SelectListItem { Text = "ASCOLI", Value = "ASCOLI" },
                 new SelectListItem { Text = "ASTON MARTIN", Value = "ASTON MARTIN" },
                 new SelectListItem { Text = "ASTON VILLA", Value = "ASTON VILLA" },
                 new SelectListItem { Text = "ASVEL", Value = "ASVEL" },
                 new SelectListItem { Text = "ATALANTA", Value = "ATALANTA" },
                 new SelectListItem { Text = "ATHLETIC BILBAO", Value = "ATHLETIC BILBAO" },
                 new SelectListItem { Text = "ATLANTA HAWKS", Value = "ATLANTA HAWKS" },
                 new SelectListItem { Text = "ATLETICO MADRID", Value = "ATLETICO MADRID" },
                 new SelectListItem { Text = "AUGSBURG", Value = "AUGSBURG" },
           }, "Seleziona Squadra")
                 @Html.ValidationMessageFor(t => t.Utente.FK_Societa_Sportiva)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBoxFor(t => t.Utente.Privacy, new { @class = "form-check-input" })
                    <label for="utente_isprivacy" class="form-check-label">@Html.Raw(Model.LabelPrivacy)</label>
                    @Html.ValidationMessageFor(t => t.Utente.Privacy)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-12 col-md-12">
            <input type="submit" value="@Model.BtnRegistrazione" class="btn btn-success" />
        </div>
    </div>
    <br />
    if (!string.IsNullOrWhiteSpace(Model.Messaggio))
    {
        <div class="row clear">
            <div class="col-md-6">
                <p class="alert alert-@(Model.IsSuccesso?"success":"danger")">@Html.Raw(Model.Messaggio)</p>
            </div>
        </div>
    }
}




