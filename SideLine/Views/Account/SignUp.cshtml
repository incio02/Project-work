@model SideLine.Models.Views.SignUpViewModel

@{
    Layout = "~/Views/Layout/Layout.cshtml";
}

<h2>@Model.LabelTitolo</h2><br /><br />


@using (Html.BeginForm("SignUp", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelNome </label><br />
                @Html.TextBoxFor(t => t.Utente.Nome, new { placeholder = Model.LabelNome })
                @Html.ValidationMessageFor(t => t.Utente.Nome)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelCognome </label><br />
                @Html.TextBoxFor(t => t.Utente.Cognome, new { placeholder = Model.LabelCognome })
                @Html.ValidationMessageFor(t => t.Utente.Cognome)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelEmail </label><br />
                @Html.TextBoxFor(t => t.Utente.Email, new { placeholder = Model.LabelEmail, type = "email" })
                @Html.ValidationMessageFor(t => t.Utente.Email)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelPassword</label><br />
                @Html.PasswordFor(t => t.Password, new { placeholder = Model.LabelPassword })
                @Html.ValidationMessageFor(t => t.Password)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelConfermaPassword</label><br />
                @Html.PasswordFor(t => t.ConfermaPassword, new { placeholder = Model.LabelConfermaPassword })
                @Html.ValidationMessageFor(t => t.ConfermaPassword)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <label>@Model.LabelSesso </label><br />
                @Html.TextBoxFor(t => t.Utente.Sesso, new { placeholder = Model.LabelSesso })
                @Html.ValidationMessageFor(t => t.Utente.Sesso)
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <div class="form-group">
                <div class="form-check">
                    @Html.CheckBoxFor(t => t.Utente.Privacy, new { @class = "form-check-input" })
                    <label for="utente_isprivacy" class="form-check-label">@Html.Raw(Model.LabelPrivacy)</label>
                    @Html.ValidationMessageFor(t => t.Utente.Privacy)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5">
            <input type="submit" value="@Model.BtnRegistrazione" class="btn btn-primary" />
        </div>
    </div>
    <br />
    if (!string.IsNullOrWhiteSpace(Model.Messaggio))
    {
        <div class="row clear">
            <div class="col-md-6">
                <p class="alert alert-@(Model.IsSuccesso?"success":"danger")">@Html.Raw(Model.Messaggio)</p>
            </div>
        </div>
    }
}




