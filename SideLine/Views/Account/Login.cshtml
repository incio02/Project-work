@model SideLine.Models.Views.LoginViewModel

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Layout/Layout.cshtml";
}

<h1>
    @Model.LabelTitoloLogin
</h1>
<br />
<br />
@using (Html.BeginForm("Login", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-md-offset-5 col-md-5"></div>
        <div class="col-md-offset-2 col-md-2">
            <div class="form-group">
                <label style="font-weight:bold">@Model.LabelEmail</label>
                @Html.TextBoxFor(t => t.Email, new { @class = "form-control fadeIn second", placeholder = Model.LabelEmail })
                <br />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-5 col-md-5"></div>
        <div class="col-md-offset-2 col-md-2">
            <div class="form-group">
                <label style="font-weight:bold">@Model.LabelPassword</label>
                @Html.PasswordFor(t => t.Password, new { @class = "form-control fadeIn third", placeholder = Model.LabelPassword })
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-offset-5 col-md-5"></div>
        <div class="col-md-offset-2 col-md-2">
            <input type="submit" value="@Model.LabelButtonInvia" class="btn btn-success" />
        </div>
    </div>
    <br />
    if (!string.IsNullOrWhiteSpace(Model.MessaggioErrore))
    {
        <div class="row">
            <div class="col-md-offset-5 col-md-5"></div>
            <div class="col-md-offset-2 col-md-2">
                <p class="alert alert-danger">@Html.Raw(Model.MessaggioErrore) </p>
            </div>
        </div>
    }
}